swagger: '2.0'
info:
  version: '0.1.0'
  title: my simple api
  description: An API to demonstrate Swagger
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /user:
    get:
      description: get all users
      operationId: getUsers
      produces:
        - application/json
      parameters:
        - in: query
          name: number
          description: Number of the page
          required: true
          type: integer
        - in: query
          name: size
          description: Size of the page
          required: true
          type: integer
      responses:
        '201':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      description: create a user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
        - in: query
          name: email
          description: admin email
          required: true
          type: string
        - in: query
          name: password
          description: admin password
          required: true
          type: string
      responses:
        '201':
          description: created
          schema:
            type: object
  /user/{email}:
    get:
      description: get user by email
      operationId: getUserByEmail
      parameters:
        - $ref: '#/parameters/email'
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
  /user/changePassword:
    post:
      description: change password
      operationId: changePassword
      consumes:
        - application/json
      parameters:
        - in: query
          name: email
          description: user email
          required: true
          type: string
        - in: query
          name: old password
          description: old user password
          required: true
          type: string
        - in: query
          name: new password
          description: new user password
          required: true
          type: string
      responses:
        '201':
          description: created
          schema:
            type: object
  /user/authentication:
    post:
      description: return de jwt token after tue user authenticate
      operationId: authentication
      consumes:
        - application/json
      parameters:
        - in: query
          name: email
          description: user email
          required: true
          type: string
        - in: query
          name: password
          description: user password
          required: true
          type: string
      responses:
        '201':
          description: created
          schema:
            type: object
parameters:
  email:
    name: email
    description: user email
    in: path
    type: string
    required: true
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      isAdmin:
        type: integer