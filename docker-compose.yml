version: '3'

services:
  proxy:
    image: "traefik:v2.0.0-rc3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.mysql.address=:3306"
    ports:
      - "80:80"
      - "1234:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db-flight:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'flights'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mysql.entrypoints=mysql"
      - "traefik.tcp.routers.mysql.service=mysql"
      - "traefik.tcp.services.mysql.loadbalancer.server.port=3306"    
    volumes:
      - ./images/database/data-flight:/docker-entrypoint-initdb.d
    command: --max-allowed-packet=1000M

  db-user:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'users'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mysql.entrypoints=mysql"
      - "traefik.tcp.routers.mysql.service=mysql"
      - "traefik.tcp.services.mysql.loadbalancer.server.port=3306"    
    volumes:
      - ./images/database/data-user:/docker-entrypoint-initdb.d
    command: --max-allowed-packet=1000M

  api-user:
    build: ./images/api-user
    container_name: 'api-user'
    environment:
        spring_profiles_active: docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`localhost`) && PathPrefix(`/api/user`)"
      - "traefik.http.services.user.loadbalancer.server.port=8080"
    #ports:
       #- "8080:8080"
    depends_on:
     - db-user

  api-flight:
    build: ./images/api-flight
    container_name: 'api-flight'
    environment:
        spring_profiles_active: docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flight.rule=Host(`localhost`) && PathPrefix(`/api/flight`)"
      - "traefik.http.services.flight.loadbalancer.server.port=8080"
    #ports:
       #- "8081:8080"
    depends_on:
     - db-flight

