swagger: '2.0'
info:
  version: '0.1.0'
  title: my simple api
  description: An API to demonstrate Swagger
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /passenger/{id}:
    get:
      description: Get passenger by Id
      operationId: getPassengerById
      parameters:
        - in: path
          name: id
          description: passenger id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Passenger'
        404:
          description: passenger not found
    delete:
      description: delete passenger by Id
      operationId: deletePassengerById
      parameters:
        - in: path
          name: id
          description: passenger id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Passenger'
        404:
          description: passenger not found
    put:
      description: update passenger by Id
      operationId: updatePassengerById
      parameters:
        - in: path
          name: id
          description: passenger id
          required: true
          type: integer
        - in: body
          name: Passenger
          required: true
          schema:
            $ref: '#/definitions/Passenger'
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Passenger'
        404:
          description: passenger not found
  /passenger:
    post:
      description: Create a passenger
      operationId: createPassenger
      consumes:
        - application/json
      parameters:
        - in: body
          name: Passenger
          required: true
          schema:
            $ref: '#/definitions/Passenger'
      responses:
        '201':
          description: created
          schema:
            type: object
  /flight/{id}:
    get:
      description: Get flight by Id
      operationId: getFlightById
      parameters:
        - in: path
          name: id
          description: flight id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Flight'
        404:
          description: Flight not found
    delete:
      description: Delete flight by Id
      operationId: deleteFlightById
      parameters:
        - in: path
          name: id
          description: flight id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Flight'
        404:
          description: flight not found
    put:
      description: Update flight by Id
      operationId: updateFlightById
      parameters:
        - in: path
          name: id
          description: passenger id
          required: true
          type: integer
        - in: body
          name: Flight
          required: true
          schema:
            $ref: '#/definitions/Flight'
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Flight'
        404:
          description: passenger not found
  /flight:
    post:
      description: Create a flight
      operationId: createFlight
      consumes:
        - application/json
      parameters:
        - in: body
          name: Flight
          required: true
          schema:
            $ref: '#/definitions/Flight'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: Get flights (pages)
      operationId: getFlights
      produces:
        - application/json
      parameters:
        - in: query
          name: number
          description: Number of the page
          required: true
          type: integer
        - in: query
          name: size
          description: Size of the page
          required: true
          type: integer
      responses:
        '201':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Flight'
  /flight/passenger:
    get:
      description: Get flights of a passenger
      operationId: getFlightsOfPassenger
      produces:
        - application/json
      parameters:
        - in: query
          name: passenger Id
          description: Id of the passenger
          required: true
          type: integer
      responses:
        '201':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Flight'

  /booking:
    post:
      description: Bind a passenger to a flight
      operationId: setBooking
      consumes:
        - application/json
      parameters:
        - in: body
          name: Booking
          required: true
          schema:
            $ref: '#/definitions/Booking'
      responses:
        '201':
          description: Passenger bind to flight
          schema:
            type: object
  /booking/{id}:
    delete:
      description: Delete booking by Id
      operationId: deleteBookingtById
      parameters:
        - in: path
          name: id
          description: Booking id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/Booking'
        404:
          description: flight not found
    get:
      description: Get all bookings for a passenger (pages)
      operationId: getBookings
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Passenger id
          required: true
          type: integer
        - in: query
          name: number
          description: Number of the page
          required: true
          type: integer
        - in: query
          name: size
          description: Size of the page
          required: true
          type: integer
      responses:
        '201':
          description: success
          schema:
            type: object
definitions:
  Passenger:
    type: object
    properties:
      id:
        type: integer
      firstname:
        type: string
      lastname:
        type: string
  Flight:
    type: object
    properties:
      id:
        type: integer
      start:
        type: string
      end:
        type: string
      time:
        type: string
  Booking:
    type: object
    properties:
      id:
        type: integer
      passenger:
        type: integer
      flight:
        type: integer